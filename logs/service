[2025-02-24 14:19:57,182] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 14:28:35,547] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 14:49:39,584] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 14:49:53,004] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 16:03:38,375] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 16:04:30,739] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 16:37:16,008] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 16:40:26,513] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 16:40:27,075] [INFO] [LeNet5.py:112:main] Model(
  (layer1): Sequential(
    (0): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
    (1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer2): Sequential(
    (0): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (relu): ReLU()
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (relu1): ReLU()
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
[2025-02-24 17:37:41,987] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 17:38:36,615] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 17:38:36,939] [INFO] [LeNet5.py:119:main] Model(
  (layer1): Sequential(
    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))
    (1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer2): Sequential(
    (0): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (relu): ReLU()
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (relu1): ReLU()
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
[2025-02-24 17:39:59,026] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 17:39:59,026] [INFO] [exp_basic.py:59:_acquire_device] Use CPU
[2025-02-24 17:39:59,028] [INFO] [exp_classification.py:64:_build_model] Number of parameters: 0.06M
[2025-02-24 19:22:22,399] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 19:22:22,399] [INFO] [exp_basic.py:59:_acquire_device] Use CPU
[2025-02-24 19:22:22,409] [INFO] [exp_classification.py:83:_build_model] Number of parameters: 0.06M
[2025-02-24 19:22:51,297] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 19:22:51,297] [INFO] [exp_basic.py:59:_acquire_device] Use CPU
[2025-02-24 19:22:51,299] [INFO] [exp_classification.py:83:_build_model] Number of parameters: 0.06M
[2025-02-24 19:24:21,108] [INFO] [device.py:35:<module>] Using device: mps
[2025-02-24 19:24:21,109] [INFO] [exp_basic.py:59:_acquire_device] Use CPU
[2025-02-24 19:24:21,110] [INFO] [exp_classification.py:83:_build_model] Number of parameters: 0.06M
[2025-02-24 19:24:24,970] [INFO] [exp_classification.py:127:train] Epoch [1/10], Step [400/938], Loss: 0.1222
[2025-02-24 19:24:28,791] [INFO] [exp_classification.py:127:train] Epoch [1/10], Step [800/938], Loss: 0.0424
[2025-02-24 19:24:34,203] [INFO] [exp_classification.py:127:train] Epoch [2/10], Step [400/938], Loss: 0.0447
[2025-02-24 19:24:37,948] [INFO] [exp_classification.py:127:train] Epoch [2/10], Step [800/938], Loss: 0.0081
[2025-02-24 19:24:43,176] [INFO] [exp_classification.py:127:train] Epoch [3/10], Step [400/938], Loss: 0.0463
[2025-02-24 19:24:47,420] [INFO] [exp_classification.py:127:train] Epoch [3/10], Step [800/938], Loss: 0.0148
[2025-02-24 19:24:52,494] [INFO] [exp_classification.py:127:train] Epoch [4/10], Step [400/938], Loss: 0.1249
[2025-02-24 19:24:56,222] [INFO] [exp_classification.py:127:train] Epoch [4/10], Step [800/938], Loss: 0.0009
[2025-02-24 19:25:01,236] [INFO] [exp_classification.py:127:train] Epoch [5/10], Step [400/938], Loss: 0.0452
[2025-02-24 19:25:04,991] [INFO] [exp_classification.py:127:train] Epoch [5/10], Step [800/938], Loss: 0.0367
[2025-02-24 19:25:10,641] [INFO] [exp_classification.py:127:train] Epoch [6/10], Step [400/938], Loss: 0.0089
[2025-02-24 19:25:14,772] [INFO] [exp_classification.py:127:train] Epoch [6/10], Step [800/938], Loss: 0.0167
[2025-02-24 19:25:20,175] [INFO] [exp_classification.py:127:train] Epoch [7/10], Step [400/938], Loss: 0.0334
[2025-02-24 19:25:24,117] [INFO] [exp_classification.py:127:train] Epoch [7/10], Step [800/938], Loss: 0.0463
[2025-02-24 19:25:29,509] [INFO] [exp_classification.py:127:train] Epoch [8/10], Step [400/938], Loss: 0.0012
[2025-02-24 19:25:33,585] [INFO] [exp_classification.py:127:train] Epoch [8/10], Step [800/938], Loss: 0.0053
[2025-02-24 19:25:39,280] [INFO] [exp_classification.py:127:train] Epoch [9/10], Step [400/938], Loss: 0.0020
[2025-02-24 19:25:43,715] [INFO] [exp_classification.py:127:train] Epoch [9/10], Step [800/938], Loss: 0.0131
[2025-02-24 19:25:48,781] [INFO] [exp_classification.py:127:train] Epoch [10/10], Step [400/938], Loss: 0.0199
[2025-02-24 19:25:52,543] [INFO] [exp_classification.py:127:train] Epoch [10/10], Step [800/938], Loss: 0.0738
[2025-02-24 19:26:43,678] [INFO] [exp_basic.py:56:_acquire_device] Use GPU: mps
[2025-02-24 19:26:43,679] [INFO] [exp_classification.py:83:_build_model] Number of parameters: 0.06M
[2025-02-24 19:26:49,138] [INFO] [exp_classification.py:127:train] Epoch [1/10], Step [400/938], Loss: 0.0284
[2025-02-24 19:26:52,372] [INFO] [exp_classification.py:127:train] Epoch [1/10], Step [800/938], Loss: 0.0656
[2025-02-24 19:26:57,335] [INFO] [exp_classification.py:127:train] Epoch [2/10], Step [400/938], Loss: 0.0309
[2025-02-24 19:27:00,604] [INFO] [exp_classification.py:127:train] Epoch [2/10], Step [800/938], Loss: 0.1443
[2025-02-24 19:27:04,972] [INFO] [exp_classification.py:127:train] Epoch [3/10], Step [400/938], Loss: 0.0602
[2025-02-24 19:27:08,185] [INFO] [exp_classification.py:127:train] Epoch [3/10], Step [800/938], Loss: 0.0714
[2025-02-24 19:27:12,630] [INFO] [exp_classification.py:127:train] Epoch [4/10], Step [400/938], Loss: 0.0679
[2025-02-24 19:27:15,924] [INFO] [exp_classification.py:127:train] Epoch [4/10], Step [800/938], Loss: 0.0014
[2025-02-24 19:27:20,281] [INFO] [exp_classification.py:127:train] Epoch [5/10], Step [400/938], Loss: 0.1175
[2025-02-24 19:27:23,738] [INFO] [exp_classification.py:127:train] Epoch [5/10], Step [800/938], Loss: 0.0503
[2025-02-24 19:27:28,522] [INFO] [exp_classification.py:127:train] Epoch [6/10], Step [400/938], Loss: 0.0159
[2025-02-24 19:27:32,011] [INFO] [exp_classification.py:127:train] Epoch [6/10], Step [800/938], Loss: 0.0027
[2025-02-24 19:27:36,471] [INFO] [exp_classification.py:127:train] Epoch [7/10], Step [400/938], Loss: 0.0167
[2025-02-24 19:27:39,692] [INFO] [exp_classification.py:127:train] Epoch [7/10], Step [800/938], Loss: 0.0119
[2025-02-24 19:27:44,097] [INFO] [exp_classification.py:127:train] Epoch [8/10], Step [400/938], Loss: 0.0120
[2025-02-24 19:27:47,519] [INFO] [exp_classification.py:127:train] Epoch [8/10], Step [800/938], Loss: 0.0114
[2025-02-24 19:27:51,841] [INFO] [exp_classification.py:127:train] Epoch [9/10], Step [400/938], Loss: 0.0102
[2025-02-24 19:27:55,112] [INFO] [exp_classification.py:127:train] Epoch [9/10], Step [800/938], Loss: 0.0077
[2025-02-24 19:27:59,432] [INFO] [exp_classification.py:127:train] Epoch [10/10], Step [400/938], Loss: 0.0037
[2025-02-24 19:28:02,630] [INFO] [exp_classification.py:127:train] Epoch [10/10], Step [800/938], Loss: 0.0020
[2025-02-24 19:30:51,783] [INFO] [MNIST.py:105:main] image: [tensor([[[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        ...,


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]]]), tensor([4, 0, 0, 7, 1, 2, 0, 8, 1, 0, 7, 2, 4, 2, 3, 7, 1, 4, 7, 2, 7, 4, 3, 8,
        0, 4, 6, 0, 0, 6, 9, 7, 0, 7, 2, 2, 2, 8, 8, 9, 9, 1, 9, 8, 4, 0, 6, 6,
        2, 8, 4, 6, 5, 7, 6, 0, 2, 6, 0, 0, 0, 7, 3, 7])]
[2025-02-24 19:31:06,226] [INFO] [MNIST.py:105:main] image: 2
[2025-02-24 19:32:20,356] [INFO] [MNIST.py:105:main] image: 
tensor([[[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        ...,


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]],


        [[[-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          ...,
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242],
          [-0.4242, -0.4242, -0.4242,  ..., -0.4242, -0.4242, -0.4242]]]]) 
image.shapetorch.Size([64, 1, 32, 32])
[2025-02-24 19:32:20,356] [INFO] [MNIST.py:106:main] labels: 
tensor([0, 1, 4, 2, 6, 3, 8, 9, 3, 3, 5, 0, 1, 0, 3, 4, 8, 0, 6, 9, 7, 8, 7, 1,
        2, 2, 3, 3, 4, 8, 2, 9, 6, 3, 0, 7, 7, 6, 7, 9, 8, 2, 5, 6, 6, 9, 9, 6,
        8, 3, 1, 9, 3, 3, 6, 5, 5, 7, 8, 1, 2, 0, 9, 3]) 
labels.shapetorch.Size([64, 1, 32, 32])
[2025-02-24 19:33:31,600] [INFO] [LeNet5.py:94:main] Model(
  (layer1): Sequential(
    (0): Conv2d(1, 6, kernel_size=(5, 5), stride=(1, 1))
    (1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer2): Sequential(
    (0): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (relu): ReLU()
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (relu1): ReLU()
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
[2025-02-24 19:50:53,273] [INFO] [exp_basic.py:56:_acquire_device] Use GPU: mps
[2025-02-24 19:50:53,286] [INFO] [exp_classification.py:81:_build_model] Number of parameters: 0.06M
[2025-02-24 19:51:28,645] [INFO] [exp_basic.py:56:_acquire_device] Use GPU: mps
[2025-02-24 19:51:28,646] [INFO] [exp_classification.py:81:_build_model] Number of parameters: 0.06M
[2025-02-24 19:51:32,299] [INFO] [exp_classification.py:126:train] Epoch [1/10], Step [400/938], Loss: 0.1283
[2025-02-24 19:51:35,424] [INFO] [exp_classification.py:126:train] Epoch [1/10], Step [800/938], Loss: 0.0655
[2025-02-24 19:51:39,802] [INFO] [exp_classification.py:126:train] Epoch [2/10], Step [400/938], Loss: 0.0232
[2025-02-24 19:51:42,963] [INFO] [exp_classification.py:126:train] Epoch [2/10], Step [800/938], Loss: 0.0318
[2025-02-24 19:51:47,312] [INFO] [exp_classification.py:126:train] Epoch [3/10], Step [400/938], Loss: 0.0086
[2025-02-24 19:51:50,502] [INFO] [exp_classification.py:126:train] Epoch [3/10], Step [800/938], Loss: 0.0527
[2025-02-24 19:51:54,977] [INFO] [exp_classification.py:126:train] Epoch [4/10], Step [400/938], Loss: 0.0331
[2025-02-24 19:51:58,177] [INFO] [exp_classification.py:126:train] Epoch [4/10], Step [800/938], Loss: 0.0062
[2025-02-24 19:52:02,456] [INFO] [exp_classification.py:126:train] Epoch [5/10], Step [400/938], Loss: 0.0300
[2025-02-24 19:52:05,639] [INFO] [exp_classification.py:126:train] Epoch [5/10], Step [800/938], Loss: 0.0080
[2025-02-24 19:52:09,943] [INFO] [exp_classification.py:126:train] Epoch [6/10], Step [400/938], Loss: 0.0033
[2025-02-24 19:52:13,121] [INFO] [exp_classification.py:126:train] Epoch [6/10], Step [800/938], Loss: 0.0181
[2025-02-24 19:52:17,425] [INFO] [exp_classification.py:126:train] Epoch [7/10], Step [400/938], Loss: 0.0483
[2025-02-24 19:52:20,625] [INFO] [exp_classification.py:126:train] Epoch [7/10], Step [800/938], Loss: 0.0323
[2025-02-24 19:52:24,903] [INFO] [exp_classification.py:126:train] Epoch [8/10], Step [400/938], Loss: 0.0434
[2025-02-24 19:52:28,111] [INFO] [exp_classification.py:126:train] Epoch [8/10], Step [800/938], Loss: 0.0056
[2025-02-24 19:52:32,415] [INFO] [exp_classification.py:126:train] Epoch [9/10], Step [400/938], Loss: 0.0669
[2025-02-24 19:52:35,624] [INFO] [exp_classification.py:126:train] Epoch [9/10], Step [800/938], Loss: 0.0018
[2025-02-24 19:52:39,930] [INFO] [exp_classification.py:126:train] Epoch [10/10], Step [400/938], Loss: 0.0038
[2025-02-24 19:52:43,122] [INFO] [exp_classification.py:126:train] Epoch [10/10], Step [800/938], Loss: 0.0279
[2025-02-24 19:52:45,535] [INFO] [exp_classification.py:139:valid] Accuracy of the network on the 10000 test images: 99.18 %
[2025-02-24 21:41:41,499] [INFO] [AlexNet.py:103:main] model: AlexNet(
  (layer1): Sequential(
    (0): Conv2d(3, 96, kernel_size=(11, 11), stride=(4, 4))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer2): Sequential(
    (0): Conv2d(96, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer3): Sequential(
    (0): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer4): Sequential(
    (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer5): Sequential(
    (0): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc2): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=4096, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc3): Sequential(
    (0): Linear(in_features=4096, out_features=10, bias=True)
  )
)
[2025-02-24 21:42:26,429] [INFO] [AlexNet.py:103:main] model: AlexNet(
  (layer1): Sequential(
    (0): Conv2d(3, 96, kernel_size=(11, 11), stride=(4, 4))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer2): Sequential(
    (0): Conv2d(96, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer3): Sequential(
    (0): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer4): Sequential(
    (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer5): Sequential(
    (0): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc2): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=4096, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc3): Sequential(
    (0): Linear(in_features=4096, out_features=10, bias=True)
  )
)
[2025-02-24 21:45:19,052] [INFO] [AlexNet.py:103:main] model: 
AlexNet(
  (layer1): Sequential(
    (0): Conv2d(3, 96, kernel_size=(11, 11), stride=(4, 4))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer2): Sequential(
    (0): Conv2d(96, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer3): Sequential(
    (0): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer4): Sequential(
    (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer5): Sequential(
    (0): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc2): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=4096, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc3): Sequential(
    (0): Linear(in_features=4096, out_features=10, bias=True)
  )
)
[2025-02-24 23:28:01,131] [INFO] [AlexNet.py:107:main] model: 
AlexNet(
  (layer1): Sequential(
    (0): Conv2d(3, 96, kernel_size=(11, 11), stride=(4, 4))
    (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer2): Sequential(
    (0): Conv2d(96, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (layer3): Sequential(
    (0): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer4): Sequential(
    (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer5): Sequential(
    (0): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (fc1): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc2): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=4096, out_features=4096, bias=True)
    (2): ReLU()
  )
  (fc3): Sequential(
    (0): Linear(in_features=4096, out_features=10, bias=True)
  )
)
[2025-02-24 23:30:21,208] [INFO] [CIFAR10.py:205:main] images: 
tensor([[[[-1.2466, -1.2466, -1.2466,  ..., -1.3241, -1.3241, -1.3241],
          [-1.2466, -1.2466, -1.2466,  ..., -1.3241, -1.3241, -1.3241],
          [-1.2466, -1.2466, -1.2466,  ..., -1.3241, -1.3241, -1.3241],
          ...,
          [-0.4130, -0.4130, -0.4130,  ..., -0.7232, -0.7232, -0.7232],
          [-0.4130, -0.4130, -0.4130,  ..., -0.7232, -0.7232, -0.7232],
          [-0.4130, -0.4130, -0.4130,  ..., -0.7232, -0.7232, -0.7232]],

         [[-1.1989, -1.1989, -1.1989,  ..., -1.2579, -1.2579, -1.2579],
          [-1.1989, -1.1989, -1.1989,  ..., -1.2579, -1.2579, -1.2579],
          [-1.1989, -1.1989, -1.1989,  ..., -1.2579, -1.2579, -1.2579],
          ...,
          [-0.5696, -0.5696, -0.5696,  ..., -0.7662, -0.7662, -0.7662],
          [-0.5696, -0.5696, -0.5696,  ..., -0.7662, -0.7662, -0.7662],
          [-0.5696, -0.5696, -0.5696,  ..., -0.7662, -0.7662, -0.7662]],

         [[-0.4655, -0.4655, -0.4655,  ..., -0.6411, -0.6411, -0.6411],
          [-0.4655, -0.4655, -0.4655,  ..., -0.6411, -0.6411, -0.6411],
          [-0.4655, -0.4655, -0.4655,  ..., -0.6411, -0.6411, -0.6411],
          ...,
          [-0.0558, -0.0558, -0.0558,  ..., -0.2704, -0.2704, -0.2704],
          [-0.0558, -0.0558, -0.0558,  ..., -0.2704, -0.2704, -0.2704],
          [-0.0558, -0.0558, -0.0558,  ..., -0.2704, -0.2704, -0.2704]]],


        [[[ 0.0134,  0.0134,  0.0134,  ..., -1.0334, -1.0334, -1.0334],
          [ 0.0134,  0.0134,  0.0134,  ..., -1.0334, -1.0334, -1.0334],
          [ 0.0134,  0.0134,  0.0134,  ..., -1.0334, -1.0334, -1.0334],
          ...,
          [-0.8201, -0.8201, -0.8201,  ..., -0.1029, -0.1029, -0.1029],
          [-0.8201, -0.8201, -0.8201,  ..., -0.1029, -0.1029, -0.1029],
          [-0.8201, -0.8201, -0.8201,  ..., -0.1029, -0.1029, -0.1029]],

         [[ 0.0794,  0.0794,  0.0794,  ..., -0.8056, -0.8056, -0.8056],
          [ 0.0794,  0.0794,  0.0794,  ..., -0.8056, -0.8056, -0.8056],
          [ 0.0794,  0.0794,  0.0794,  ..., -0.8056, -0.8056, -0.8056],
          ...,
          [-0.9039, -0.9039, -0.9039,  ..., -0.3336, -0.3336, -0.3336],
          [-0.9039, -0.9039, -0.9039,  ..., -0.3336, -0.3336, -0.3336],
          [-0.9039, -0.9039, -0.9039,  ..., -0.3336, -0.3336, -0.3336]],

         [[ 0.3930,  0.3930,  0.3930,  ..., -0.6020, -0.6020, -0.6020],
          [ 0.3930,  0.3930,  0.3930,  ..., -0.6020, -0.6020, -0.6020],
          [ 0.3930,  0.3930,  0.3930,  ..., -0.6020, -0.6020, -0.6020],
          ...,
          [-0.6411, -0.6411, -0.6411,  ..., -0.4069, -0.4069, -0.4069],
          [-0.6411, -0.6411, -0.6411,  ..., -0.4069, -0.4069, -0.4069],
          [-0.6411, -0.6411, -0.6411,  ..., -0.4069, -0.4069, -0.4069]]],


        [[[ 1.8938,  1.8938,  1.8938,  ..., -0.1416, -0.1416, -0.1416],
          [ 1.8938,  1.8938,  1.8938,  ..., -0.1416, -0.1416, -0.1416],
          [ 1.8938,  1.8938,  1.8938,  ..., -0.1416, -0.1416, -0.1416],
          ...,
          [ 1.7775,  1.7775,  1.7775,  ...,  1.4285,  1.4285,  1.4285],
          [ 1.7775,  1.7775,  1.7775,  ...,  1.4285,  1.4285,  1.4285],
          [ 1.7775,  1.7775,  1.7775,  ...,  1.4285,  1.4285,  1.4285]],

         [[ 1.9675,  1.9675,  1.9675,  ...,  0.9448,  0.9448,  0.9448],
          [ 1.9675,  1.9675,  1.9675,  ...,  0.9448,  0.9448,  0.9448],
          [ 1.9675,  1.9675,  1.9675,  ...,  0.9448,  0.9448,  0.9448],
          ...,
          [ 2.0068,  2.0068,  2.0068,  ...,  1.8495,  1.8495,  1.8495],
          [ 2.0068,  2.0068,  2.0068,  ...,  1.8495,  1.8495,  1.8495],
          [ 2.0068,  2.0068,  2.0068,  ...,  1.8495,  1.8495,  1.8495]],

         [[ 2.3245,  2.3245,  2.3245,  ..., -0.0558, -0.0558, -0.0558],
          [ 2.3245,  2.3245,  2.3245,  ..., -0.0558, -0.0558, -0.0558],
          [ 2.3245,  2.3245,  2.3245,  ..., -0.0558, -0.0558, -0.0558],
          ...,
          [ 2.3440,  2.3440,  2.3440,  ...,  1.6026,  1.6026,  1.6026],
          [ 2.3440,  2.3440,  2.3440,  ...,  1.6026,  1.6026,  1.6026],
          [ 2.3440,  2.3440,  2.3440,  ...,  1.6026,  1.6026,  1.6026]]],


        ...,


        [[[ 1.9325,  1.9325,  1.9325,  ..., -1.6924, -1.6924, -1.6924],
          [ 1.9325,  1.9325,  1.9325,  ..., -1.6924, -1.6924, -1.6924],
          [ 1.9325,  1.9325,  1.9325,  ..., -1.6924, -1.6924, -1.6924],
          ...,
          [-1.0334, -1.0334, -1.0334,  ...,  0.4011,  0.4011,  0.4011],
          [-1.0334, -1.0334, -1.0334,  ...,  0.4011,  0.4011,  0.4011],
          [-1.0334, -1.0334, -1.0334,  ...,  0.4011,  0.4011,  0.4011]],

         [[ 2.0068,  2.0068,  2.0068,  ..., -1.0809, -1.0809, -1.0809],
          [ 2.0068,  2.0068,  2.0068,  ..., -1.0809, -1.0809, -1.0809],
          [ 2.0068,  2.0068,  2.0068,  ..., -1.0809, -1.0809, -1.0809],
          ...,
          [-1.0612, -1.0612, -1.0612,  ...,  0.1581,  0.1581,  0.1581],
          [-1.0612, -1.0612, -1.0612,  ...,  0.1581,  0.1581,  0.1581],
          [-1.0612, -1.0612, -1.0612,  ...,  0.1581,  0.1581,  0.1581]],

         [[ 2.1684,  2.1684,  2.1684,  ..., -1.7922, -1.7922, -1.7922],
          [ 2.1684,  2.1684,  2.1684,  ..., -1.7922, -1.7922, -1.7922],
          [ 2.1684,  2.1684,  2.1684,  ..., -1.7922, -1.7922, -1.7922],
          ...,
          [-0.9727, -0.9727, -0.9727,  ..., -0.0362, -0.0362, -0.0362],
          [-0.9727, -0.9727, -0.9727,  ..., -0.0362, -0.0362, -0.0362],
          [-0.9727, -0.9727, -0.9727,  ..., -0.0362, -0.0362, -0.0362]]],


        [[[-1.4017, -1.4017, -1.4017,  ..., -0.6069, -0.6069, -0.6069],
          [-1.4017, -1.4017, -1.4017,  ..., -0.6069, -0.6069, -0.6069],
          [-1.4017, -1.4017, -1.4017,  ..., -0.6069, -0.6069, -0.6069],
          ...,
          [-0.9752, -0.9752, -0.9752,  ..., -2.2546, -2.2546, -2.2546],
          [-0.9752, -0.9752, -0.9752,  ..., -2.2546, -2.2546, -2.2546],
          [-0.9752, -0.9752, -0.9752,  ..., -2.2546, -2.2546, -2.2546]],

         [[-1.0809, -1.0809, -1.0809,  ..., -0.2942, -0.2942, -0.2942],
          [-1.0809, -1.0809, -1.0809,  ..., -0.2942, -0.2942, -0.2942],
          [-1.0809, -1.0809, -1.0809,  ..., -0.2942, -0.2942, -0.2942],
          ...,
          [-0.4909, -0.4909, -0.4909,  ..., -2.3593, -2.3593, -2.3593],
          [-0.4909, -0.4909, -0.4909,  ..., -2.3593, -2.3593, -2.3593],
          [-0.4909, -0.4909, -0.4909,  ..., -2.3593, -2.3593, -2.3593]],

         [[-1.1093, -1.1093, -1.1093,  ..., -0.8362, -0.8362, -0.8362],
          [-1.1093, -1.1093, -1.1093,  ..., -0.8362, -0.8362, -0.8362],
          [-1.1093, -1.1093, -1.1093,  ..., -0.8362, -0.8362, -0.8362],
          ...,
          [-0.8362, -0.8362, -0.8362,  ..., -2.1824, -2.1824, -2.1824],
          [-0.8362, -0.8362, -0.8362,  ..., -2.1824, -2.1824, -2.1824],
          [-0.8362, -0.8362, -0.8362,  ..., -2.1824, -2.1824, -2.1824]]],


        [[[ 1.1571,  1.1571,  1.1571,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.1571,  1.1571,  1.1571,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.1571,  1.1571,  1.1571,  ...,  0.1104,  0.1104,  0.1104],
          ...,
          [ 1.2541,  1.2541,  1.2541,  ...,  1.3316,  1.3316,  1.3316],
          [ 1.2541,  1.2541,  1.2541,  ...,  1.3316,  1.3316,  1.3316],
          [ 1.2541,  1.2541,  1.2541,  ...,  1.3316,  1.3316,  1.3316]],

         [[ 1.6134,  1.6134,  1.6134,  ...,  0.8464,  0.8464,  0.8464],
          [ 1.6134,  1.6134,  1.6134,  ...,  0.8464,  0.8464,  0.8464],
          [ 1.6134,  1.6134,  1.6134,  ...,  0.8464,  0.8464,  0.8464],
          ...,
          [ 1.3971,  1.3971,  1.3971,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.3971,  1.3971,  1.3971,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.3971,  1.3971,  1.3971,  ...,  1.5544,  1.5544,  1.5544]],

         [[ 1.7782,  1.7782,  1.7782,  ...,  1.3880,  1.3880,  1.3880],
          [ 1.7782,  1.7782,  1.7782,  ...,  1.3880,  1.3880,  1.3880],
          [ 1.7782,  1.7782,  1.7782,  ...,  1.3880,  1.3880,  1.3880],
          ...,
          [ 1.5246,  1.5246,  1.5246,  ...,  1.6026,  1.6026,  1.6026],
          [ 1.5246,  1.5246,  1.5246,  ...,  1.6026,  1.6026,  1.6026],
          [ 1.5246,  1.5246,  1.5246,  ...,  1.6026,  1.6026,  1.6026]]]]) 
images.shapetensor([[[[-1.2466, -1.2466, -1.2466,  ..., -1.3241, -1.3241, -1.3241],
          [-1.2466, -1.2466, -1.2466,  ..., -1.3241, -1.3241, -1.3241],
          [-1.2466, -1.2466, -1.2466,  ..., -1.3241, -1.3241, -1.3241],
          ...,
          [-0.4130, -0.4130, -0.4130,  ..., -0.7232, -0.7232, -0.7232],
          [-0.4130, -0.4130, -0.4130,  ..., -0.7232, -0.7232, -0.7232],
          [-0.4130, -0.4130, -0.4130,  ..., -0.7232, -0.7232, -0.7232]],

         [[-1.1989, -1.1989, -1.1989,  ..., -1.2579, -1.2579, -1.2579],
          [-1.1989, -1.1989, -1.1989,  ..., -1.2579, -1.2579, -1.2579],
          [-1.1989, -1.1989, -1.1989,  ..., -1.2579, -1.2579, -1.2579],
          ...,
          [-0.5696, -0.5696, -0.5696,  ..., -0.7662, -0.7662, -0.7662],
          [-0.5696, -0.5696, -0.5696,  ..., -0.7662, -0.7662, -0.7662],
          [-0.5696, -0.5696, -0.5696,  ..., -0.7662, -0.7662, -0.7662]],

         [[-0.4655, -0.4655, -0.4655,  ..., -0.6411, -0.6411, -0.6411],
          [-0.4655, -0.4655, -0.4655,  ..., -0.6411, -0.6411, -0.6411],
          [-0.4655, -0.4655, -0.4655,  ..., -0.6411, -0.6411, -0.6411],
          ...,
          [-0.0558, -0.0558, -0.0558,  ..., -0.2704, -0.2704, -0.2704],
          [-0.0558, -0.0558, -0.0558,  ..., -0.2704, -0.2704, -0.2704],
          [-0.0558, -0.0558, -0.0558,  ..., -0.2704, -0.2704, -0.2704]]],


        [[[ 0.0134,  0.0134,  0.0134,  ..., -1.0334, -1.0334, -1.0334],
          [ 0.0134,  0.0134,  0.0134,  ..., -1.0334, -1.0334, -1.0334],
          [ 0.0134,  0.0134,  0.0134,  ..., -1.0334, -1.0334, -1.0334],
          ...,
          [-0.8201, -0.8201, -0.8201,  ..., -0.1029, -0.1029, -0.1029],
          [-0.8201, -0.8201, -0.8201,  ..., -0.1029, -0.1029, -0.1029],
          [-0.8201, -0.8201, -0.8201,  ..., -0.1029, -0.1029, -0.1029]],

         [[ 0.0794,  0.0794,  0.0794,  ..., -0.8056, -0.8056, -0.8056],
          [ 0.0794,  0.0794,  0.0794,  ..., -0.8056, -0.8056, -0.8056],
          [ 0.0794,  0.0794,  0.0794,  ..., -0.8056, -0.8056, -0.8056],
          ...,
          [-0.9039, -0.9039, -0.9039,  ..., -0.3336, -0.3336, -0.3336],
          [-0.9039, -0.9039, -0.9039,  ..., -0.3336, -0.3336, -0.3336],
          [-0.9039, -0.9039, -0.9039,  ..., -0.3336, -0.3336, -0.3336]],

         [[ 0.3930,  0.3930,  0.3930,  ..., -0.6020, -0.6020, -0.6020],
          [ 0.3930,  0.3930,  0.3930,  ..., -0.6020, -0.6020, -0.6020],
          [ 0.3930,  0.3930,  0.3930,  ..., -0.6020, -0.6020, -0.6020],
          ...,
          [-0.6411, -0.6411, -0.6411,  ..., -0.4069, -0.4069, -0.4069],
          [-0.6411, -0.6411, -0.6411,  ..., -0.4069, -0.4069, -0.4069],
          [-0.6411, -0.6411, -0.6411,  ..., -0.4069, -0.4069, -0.4069]]],


        [[[ 1.8938,  1.8938,  1.8938,  ..., -0.1416, -0.1416, -0.1416],
          [ 1.8938,  1.8938,  1.8938,  ..., -0.1416, -0.1416, -0.1416],
          [ 1.8938,  1.8938,  1.8938,  ..., -0.1416, -0.1416, -0.1416],
          ...,
          [ 1.7775,  1.7775,  1.7775,  ...,  1.4285,  1.4285,  1.4285],
          [ 1.7775,  1.7775,  1.7775,  ...,  1.4285,  1.4285,  1.4285],
          [ 1.7775,  1.7775,  1.7775,  ...,  1.4285,  1.4285,  1.4285]],

         [[ 1.9675,  1.9675,  1.9675,  ...,  0.9448,  0.9448,  0.9448],
          [ 1.9675,  1.9675,  1.9675,  ...,  0.9448,  0.9448,  0.9448],
          [ 1.9675,  1.9675,  1.9675,  ...,  0.9448,  0.9448,  0.9448],
          ...,
          [ 2.0068,  2.0068,  2.0068,  ...,  1.8495,  1.8495,  1.8495],
          [ 2.0068,  2.0068,  2.0068,  ...,  1.8495,  1.8495,  1.8495],
          [ 2.0068,  2.0068,  2.0068,  ...,  1.8495,  1.8495,  1.8495]],

         [[ 2.3245,  2.3245,  2.3245,  ..., -0.0558, -0.0558, -0.0558],
          [ 2.3245,  2.3245,  2.3245,  ..., -0.0558, -0.0558, -0.0558],
          [ 2.3245,  2.3245,  2.3245,  ..., -0.0558, -0.0558, -0.0558],
          ...,
          [ 2.3440,  2.3440,  2.3440,  ...,  1.6026,  1.6026,  1.6026],
          [ 2.3440,  2.3440,  2.3440,  ...,  1.6026,  1.6026,  1.6026],
          [ 2.3440,  2.3440,  2.3440,  ...,  1.6026,  1.6026,  1.6026]]],


        ...,


        [[[ 1.9325,  1.9325,  1.9325,  ..., -1.6924, -1.6924, -1.6924],
          [ 1.9325,  1.9325,  1.9325,  ..., -1.6924, -1.6924, -1.6924],
          [ 1.9325,  1.9325,  1.9325,  ..., -1.6924, -1.6924, -1.6924],
          ...,
          [-1.0334, -1.0334, -1.0334,  ...,  0.4011,  0.4011,  0.4011],
          [-1.0334, -1.0334, -1.0334,  ...,  0.4011,  0.4011,  0.4011],
          [-1.0334, -1.0334, -1.0334,  ...,  0.4011,  0.4011,  0.4011]],

         [[ 2.0068,  2.0068,  2.0068,  ..., -1.0809, -1.0809, -1.0809],
          [ 2.0068,  2.0068,  2.0068,  ..., -1.0809, -1.0809, -1.0809],
          [ 2.0068,  2.0068,  2.0068,  ..., -1.0809, -1.0809, -1.0809],
          ...,
          [-1.0612, -1.0612, -1.0612,  ...,  0.1581,  0.1581,  0.1581],
          [-1.0612, -1.0612, -1.0612,  ...,  0.1581,  0.1581,  0.1581],
          [-1.0612, -1.0612, -1.0612,  ...,  0.1581,  0.1581,  0.1581]],

         [[ 2.1684,  2.1684,  2.1684,  ..., -1.7922, -1.7922, -1.7922],
          [ 2.1684,  2.1684,  2.1684,  ..., -1.7922, -1.7922, -1.7922],
          [ 2.1684,  2.1684,  2.1684,  ..., -1.7922, -1.7922, -1.7922],
          ...,
          [-0.9727, -0.9727, -0.9727,  ..., -0.0362, -0.0362, -0.0362],
          [-0.9727, -0.9727, -0.9727,  ..., -0.0362, -0.0362, -0.0362],
          [-0.9727, -0.9727, -0.9727,  ..., -0.0362, -0.0362, -0.0362]]],


        [[[-1.4017, -1.4017, -1.4017,  ..., -0.6069, -0.6069, -0.6069],
          [-1.4017, -1.4017, -1.4017,  ..., -0.6069, -0.6069, -0.6069],
          [-1.4017, -1.4017, -1.4017,  ..., -0.6069, -0.6069, -0.6069],
          ...,
          [-0.9752, -0.9752, -0.9752,  ..., -2.2546, -2.2546, -2.2546],
          [-0.9752, -0.9752, -0.9752,  ..., -2.2546, -2.2546, -2.2546],
          [-0.9752, -0.9752, -0.9752,  ..., -2.2546, -2.2546, -2.2546]],

         [[-1.0809, -1.0809, -1.0809,  ..., -0.2942, -0.2942, -0.2942],
          [-1.0809, -1.0809, -1.0809,  ..., -0.2942, -0.2942, -0.2942],
          [-1.0809, -1.0809, -1.0809,  ..., -0.2942, -0.2942, -0.2942],
          ...,
          [-0.4909, -0.4909, -0.4909,  ..., -2.3593, -2.3593, -2.3593],
          [-0.4909, -0.4909, -0.4909,  ..., -2.3593, -2.3593, -2.3593],
          [-0.4909, -0.4909, -0.4909,  ..., -2.3593, -2.3593, -2.3593]],

         [[-1.1093, -1.1093, -1.1093,  ..., -0.8362, -0.8362, -0.8362],
          [-1.1093, -1.1093, -1.1093,  ..., -0.8362, -0.8362, -0.8362],
          [-1.1093, -1.1093, -1.1093,  ..., -0.8362, -0.8362, -0.8362],
          ...,
          [-0.8362, -0.8362, -0.8362,  ..., -2.1824, -2.1824, -2.1824],
          [-0.8362, -0.8362, -0.8362,  ..., -2.1824, -2.1824, -2.1824],
          [-0.8362, -0.8362, -0.8362,  ..., -2.1824, -2.1824, -2.1824]]],


        [[[ 1.1571,  1.1571,  1.1571,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.1571,  1.1571,  1.1571,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.1571,  1.1571,  1.1571,  ...,  0.1104,  0.1104,  0.1104],
          ...,
          [ 1.2541,  1.2541,  1.2541,  ...,  1.3316,  1.3316,  1.3316],
          [ 1.2541,  1.2541,  1.2541,  ...,  1.3316,  1.3316,  1.3316],
          [ 1.2541,  1.2541,  1.2541,  ...,  1.3316,  1.3316,  1.3316]],

         [[ 1.6134,  1.6134,  1.6134,  ...,  0.8464,  0.8464,  0.8464],
          [ 1.6134,  1.6134,  1.6134,  ...,  0.8464,  0.8464,  0.8464],
          [ 1.6134,  1.6134,  1.6134,  ...,  0.8464,  0.8464,  0.8464],
          ...,
          [ 1.3971,  1.3971,  1.3971,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.3971,  1.3971,  1.3971,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.3971,  1.3971,  1.3971,  ...,  1.5544,  1.5544,  1.5544]],

         [[ 1.7782,  1.7782,  1.7782,  ...,  1.3880,  1.3880,  1.3880],
          [ 1.7782,  1.7782,  1.7782,  ...,  1.3880,  1.3880,  1.3880],
          [ 1.7782,  1.7782,  1.7782,  ...,  1.3880,  1.3880,  1.3880],
          ...,
          [ 1.5246,  1.5246,  1.5246,  ...,  1.6026,  1.6026,  1.6026],
          [ 1.5246,  1.5246,  1.5246,  ...,  1.6026,  1.6026,  1.6026],
          [ 1.5246,  1.5246,  1.5246,  ...,  1.6026,  1.6026,  1.6026]]]])
[2025-02-24 23:30:21,209] [INFO] [CIFAR10.py:206:main] labels: 
tensor([8, 3, 1, 7, 9, 4, 0, 1, 2, 3, 8, 2, 6, 0, 3, 9, 3, 3, 0, 0, 5, 9, 2, 0,
        0, 5, 5, 3, 3, 2, 2, 3, 9, 5, 7, 6, 9, 1, 4, 8, 2, 9, 4, 7, 1, 1, 7, 8,
        4, 5, 7, 5, 8, 3, 2, 6, 8, 7, 8, 7, 6, 9, 4, 8]) 
labels.shapetensor([8, 3, 1, 7, 9, 4, 0, 1, 2, 3, 8, 2, 6, 0, 3, 9, 3, 3, 0, 0, 5, 9, 2, 0,
        0, 5, 5, 3, 3, 2, 2, 3, 9, 5, 7, 6, 9, 1, 4, 8, 2, 9, 4, 7, 1, 1, 7, 8,
        4, 5, 7, 5, 8, 3, 2, 6, 8, 7, 8, 7, 6, 9, 4, 8])
[2025-02-24 23:31:43,460] [INFO] [CIFAR10.py:177:main] images: 
tensor([[[[ 2.0682,  2.0682,  2.0682,  ..., -0.8977, -0.8977, -0.8977],
          [ 2.0682,  2.0682,  2.0682,  ..., -0.8977, -0.8977, -0.8977],
          [ 2.0682,  2.0682,  2.0682,  ..., -0.8977, -0.8977, -0.8977],
          ...,
          [ 2.0489,  2.0489,  2.0489,  ..., -2.0801, -2.0801, -2.0801],
          [ 2.0489,  2.0489,  2.0489,  ..., -2.0801, -2.0801, -2.0801],
          [ 2.0489,  2.0489,  2.0489,  ..., -2.0801, -2.0801, -2.0801]],

         [[ 2.1838,  2.1838,  2.1838,  ...,  1.6134,  1.6134,  1.6134],
          [ 2.1838,  2.1838,  2.1838,  ...,  1.6134,  1.6134,  1.6134],
          [ 2.1838,  2.1838,  2.1838,  ...,  1.6134,  1.6134,  1.6134],
          ...,
          [ 1.3971,  1.3971,  1.3971,  ..., -2.1823, -2.1823, -2.1823],
          [ 1.3971,  1.3971,  1.3971,  ..., -2.1823, -2.1823, -2.1823],
          [ 1.3971,  1.3971,  1.3971,  ..., -2.1823, -2.1823, -2.1823]],

         [[ 2.2855,  2.2855,  2.2855,  ...,  2.6562,  2.6562,  2.6562],
          [ 2.2855,  2.2855,  2.2855,  ...,  2.6562,  2.6562,  2.6562],
          [ 2.2855,  2.2855,  2.2855,  ...,  2.6562,  2.6562,  2.6562],
          ...,
          [-0.7191, -0.7191, -0.7191,  ..., -2.1238, -2.1238, -2.1238],
          [-0.7191, -0.7191, -0.7191,  ..., -2.1238, -2.1238, -2.1238],
          [-0.7191, -0.7191, -0.7191,  ..., -2.1238, -2.1238, -2.1238]]],


        [[[-0.3936, -0.3936, -0.3936,  ...,  0.8276,  0.8276,  0.8276],
          [-0.3936, -0.3936, -0.3936,  ...,  0.8276,  0.8276,  0.8276],
          [-0.3936, -0.3936, -0.3936,  ...,  0.8276,  0.8276,  0.8276],
          ...,
          [ 1.5642,  1.5642,  1.5642,  ...,  1.5061,  1.5061,  1.5061],
          [ 1.5642,  1.5642,  1.5642,  ...,  1.5061,  1.5061,  1.5061],
          [ 1.5642,  1.5642,  1.5642,  ...,  1.5061,  1.5061,  1.5061]],

         [[-0.3729, -0.3729, -0.3729,  ...,  1.0628,  1.0628,  1.0628],
          [-0.3729, -0.3729, -0.3729,  ...,  1.0628,  1.0628,  1.0628],
          [-0.3729, -0.3729, -0.3729,  ...,  1.0628,  1.0628,  1.0628],
          ...,
          [ 1.6921,  1.6921,  1.6921,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.6921,  1.6921,  1.6921,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.6921,  1.6921,  1.6921,  ...,  1.5544,  1.5544,  1.5544]],

         [[ 0.2954,  0.2954,  0.2954,  ...,  1.7977,  1.7977,  1.7977],
          [ 0.2954,  0.2954,  0.2954,  ...,  1.7977,  1.7977,  1.7977],
          [ 0.2954,  0.2954,  0.2954,  ...,  1.7977,  1.7977,  1.7977],
          ...,
          [ 1.9733,  1.9733,  1.9733,  ...,  1.8172,  1.8172,  1.8172],
          [ 1.9733,  1.9733,  1.9733,  ...,  1.8172,  1.8172,  1.8172],
          [ 1.9733,  1.9733,  1.9733,  ...,  1.8172,  1.8172,  1.8172]]],


        [[[-1.3241, -1.3241, -1.3241,  ..., -0.6263, -0.6263, -0.6263],
          [-1.3241, -1.3241, -1.3241,  ..., -0.6263, -0.6263, -0.6263],
          [-1.3241, -1.3241, -1.3241,  ..., -0.6263, -0.6263, -0.6263],
          ...,
          [-0.1610, -0.1610, -0.1610,  ..., -1.0721, -1.0721, -1.0721],
          [-0.1610, -0.1610, -0.1610,  ..., -1.0721, -1.0721, -1.0721],
          [-0.1610, -0.1610, -0.1610,  ..., -1.0721, -1.0721, -1.0721]],

         [[-1.2186, -1.2186, -1.2186,  ..., -0.2942, -0.2942, -0.2942],
          [-1.2186, -1.2186, -1.2186,  ..., -0.2942, -0.2942, -0.2942],
          [-1.2186, -1.2186, -1.2186,  ..., -0.2942, -0.2942, -0.2942],
          ...,
          [ 0.0794,  0.0794,  0.0794,  ..., -1.0612, -1.0612, -1.0612],
          [ 0.0794,  0.0794,  0.0794,  ..., -1.0612, -1.0612, -1.0612],
          [ 0.0794,  0.0794,  0.0794,  ..., -1.0612, -1.0612, -1.0612]],

         [[-1.0508, -1.0508, -1.0508,  ..., -0.5630, -0.5630, -0.5630],
          [-1.0508, -1.0508, -1.0508,  ..., -0.5630, -0.5630, -0.5630],
          [-1.0508, -1.0508, -1.0508,  ..., -0.5630, -0.5630, -0.5630],
          ...,
          [ 0.0223,  0.0223,  0.0223,  ..., -0.9142, -0.9142, -0.9142],
          [ 0.0223,  0.0223,  0.0223,  ..., -0.9142, -0.9142, -0.9142],
          [ 0.0223,  0.0223,  0.0223,  ..., -0.9142, -0.9142, -0.9142]]],


        ...,


        [[[ 2.0101,  2.0101,  2.0101,  ...,  1.8744,  1.8744,  1.8744],
          [ 2.0101,  2.0101,  2.0101,  ...,  1.8744,  1.8744,  1.8744],
          [ 2.0101,  2.0101,  2.0101,  ...,  1.8744,  1.8744,  1.8744],
          ...,
          [ 2.0295,  2.0295,  2.0295,  ...,  0.4011,  0.4011,  0.4011],
          [ 2.0295,  2.0295,  2.0295,  ...,  0.4011,  0.4011,  0.4011],
          [ 2.0295,  2.0295,  2.0295,  ...,  0.4011,  0.4011,  0.4011]],

         [[ 1.9281,  1.9281,  1.9281,  ...,  1.8298,  1.8298,  1.8298],
          [ 1.9281,  1.9281,  1.9281,  ...,  1.8298,  1.8298,  1.8298],
          [ 1.9281,  1.9281,  1.9281,  ...,  1.8298,  1.8298,  1.8298],
          ...,
          [ 1.9871,  1.9871,  1.9871,  ...,  0.3351,  0.3351,  0.3351],
          [ 1.9871,  1.9871,  1.9871,  ...,  0.3351,  0.3351,  0.3351],
          [ 1.9871,  1.9871,  1.9871,  ...,  0.3351,  0.3351,  0.3351]],

         [[ 1.8172,  1.8172,  1.8172,  ...,  1.7002,  1.7002,  1.7002],
          [ 1.8172,  1.8172,  1.8172,  ...,  1.7002,  1.7002,  1.7002],
          [ 1.8172,  1.8172,  1.8172,  ...,  1.7002,  1.7002,  1.7002],
          ...,
          [ 1.8563,  1.8563,  1.8563,  ...,  0.1784,  0.1784,  0.1784],
          [ 1.8563,  1.8563,  1.8563,  ...,  0.1784,  0.1784,  0.1784],
          [ 1.8563,  1.8563,  1.8563,  ...,  0.1784,  0.1784,  0.1784]]],


        [[[ 1.4673,  1.4673,  1.4673,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.4673,  1.4673,  1.4673,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.4673,  1.4673,  1.4673,  ...,  0.1104,  0.1104,  0.1104],
          ...,
          [-0.5681, -0.5681, -0.5681,  ..., -1.2078, -1.2078, -1.2078],
          [-0.5681, -0.5681, -0.5681,  ..., -1.2078, -1.2078, -1.2078],
          [-0.5681, -0.5681, -0.5681,  ..., -1.2078, -1.2078, -1.2078]],

         [[ 1.8101,  1.8101,  1.8101,  ...,  0.4334,  0.4334,  0.4334],
          [ 1.8101,  1.8101,  1.8101,  ...,  0.4334,  0.4334,  0.4334],
          [ 1.8101,  1.8101,  1.8101,  ...,  0.4334,  0.4334,  0.4334],
          ...,
          [-0.5106, -0.5106, -0.5106,  ..., -1.5922, -1.5922, -1.5922],
          [-0.5106, -0.5106, -0.5106,  ..., -1.5922, -1.5922, -1.5922],
          [-0.5106, -0.5106, -0.5106,  ..., -1.5922, -1.5922, -1.5922]],

         [[ 2.0319,  2.0319,  2.0319,  ...,  0.0223,  0.0223,  0.0223],
          [ 2.0319,  2.0319,  2.0319,  ...,  0.0223,  0.0223,  0.0223],
          [ 2.0319,  2.0319,  2.0319,  ...,  0.0223,  0.0223,  0.0223],
          ...,
          [-0.3679, -0.3679, -0.3679,  ..., -1.4605, -1.4605, -1.4605],
          [-0.3679, -0.3679, -0.3679,  ..., -1.4605, -1.4605, -1.4605],
          [-0.3679, -0.3679, -0.3679,  ..., -1.4605, -1.4605, -1.4605]]],


        [[[-0.8007, -0.8007, -0.8007,  ..., -0.8395, -0.8395, -0.8395],
          [-0.8007, -0.8007, -0.8007,  ..., -0.8395, -0.8395, -0.8395],
          [-0.8007, -0.8007, -0.8007,  ..., -0.8395, -0.8395, -0.8395],
          ...,
          [-0.0253, -0.0253, -0.0253,  ...,  0.5756,  0.5756,  0.5756],
          [-0.0253, -0.0253, -0.0253,  ...,  0.5756,  0.5756,  0.5756],
          [-0.0253, -0.0253, -0.0253,  ...,  0.5756,  0.5756,  0.5756]],

         [[ 0.1384,  0.1384,  0.1384,  ...,  0.1778,  0.1778,  0.1778],
          [ 0.1384,  0.1384,  0.1384,  ...,  0.1778,  0.1778,  0.1778],
          [ 0.1384,  0.1384,  0.1384,  ...,  0.1778,  0.1778,  0.1778],
          ...,
          [ 0.3548,  0.3548,  0.3548,  ...,  0.6891,  0.6891,  0.6891],
          [ 0.3548,  0.3548,  0.3548,  ...,  0.6891,  0.6891,  0.6891],
          [ 0.3548,  0.3548,  0.3548,  ...,  0.6891,  0.6891,  0.6891]],

         [[ 1.1344,  1.1344,  1.1344,  ...,  1.1734,  1.1734,  1.1734],
          [ 1.1344,  1.1344,  1.1344,  ...,  1.1734,  1.1734,  1.1734],
          [ 1.1344,  1.1344,  1.1344,  ...,  1.1734,  1.1734,  1.1734],
          ...,
          [ 0.8612,  0.8612,  0.8612,  ...,  1.2319,  1.2319,  1.2319],
          [ 0.8612,  0.8612,  0.8612,  ...,  1.2319,  1.2319,  1.2319],
          [ 0.8612,  0.8612,  0.8612,  ...,  1.2319,  1.2319,  1.2319]]]]) 
images.shapetensor([[[[ 2.0682,  2.0682,  2.0682,  ..., -0.8977, -0.8977, -0.8977],
          [ 2.0682,  2.0682,  2.0682,  ..., -0.8977, -0.8977, -0.8977],
          [ 2.0682,  2.0682,  2.0682,  ..., -0.8977, -0.8977, -0.8977],
          ...,
          [ 2.0489,  2.0489,  2.0489,  ..., -2.0801, -2.0801, -2.0801],
          [ 2.0489,  2.0489,  2.0489,  ..., -2.0801, -2.0801, -2.0801],
          [ 2.0489,  2.0489,  2.0489,  ..., -2.0801, -2.0801, -2.0801]],

         [[ 2.1838,  2.1838,  2.1838,  ...,  1.6134,  1.6134,  1.6134],
          [ 2.1838,  2.1838,  2.1838,  ...,  1.6134,  1.6134,  1.6134],
          [ 2.1838,  2.1838,  2.1838,  ...,  1.6134,  1.6134,  1.6134],
          ...,
          [ 1.3971,  1.3971,  1.3971,  ..., -2.1823, -2.1823, -2.1823],
          [ 1.3971,  1.3971,  1.3971,  ..., -2.1823, -2.1823, -2.1823],
          [ 1.3971,  1.3971,  1.3971,  ..., -2.1823, -2.1823, -2.1823]],

         [[ 2.2855,  2.2855,  2.2855,  ...,  2.6562,  2.6562,  2.6562],
          [ 2.2855,  2.2855,  2.2855,  ...,  2.6562,  2.6562,  2.6562],
          [ 2.2855,  2.2855,  2.2855,  ...,  2.6562,  2.6562,  2.6562],
          ...,
          [-0.7191, -0.7191, -0.7191,  ..., -2.1238, -2.1238, -2.1238],
          [-0.7191, -0.7191, -0.7191,  ..., -2.1238, -2.1238, -2.1238],
          [-0.7191, -0.7191, -0.7191,  ..., -2.1238, -2.1238, -2.1238]]],


        [[[-0.3936, -0.3936, -0.3936,  ...,  0.8276,  0.8276,  0.8276],
          [-0.3936, -0.3936, -0.3936,  ...,  0.8276,  0.8276,  0.8276],
          [-0.3936, -0.3936, -0.3936,  ...,  0.8276,  0.8276,  0.8276],
          ...,
          [ 1.5642,  1.5642,  1.5642,  ...,  1.5061,  1.5061,  1.5061],
          [ 1.5642,  1.5642,  1.5642,  ...,  1.5061,  1.5061,  1.5061],
          [ 1.5642,  1.5642,  1.5642,  ...,  1.5061,  1.5061,  1.5061]],

         [[-0.3729, -0.3729, -0.3729,  ...,  1.0628,  1.0628,  1.0628],
          [-0.3729, -0.3729, -0.3729,  ...,  1.0628,  1.0628,  1.0628],
          [-0.3729, -0.3729, -0.3729,  ...,  1.0628,  1.0628,  1.0628],
          ...,
          [ 1.6921,  1.6921,  1.6921,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.6921,  1.6921,  1.6921,  ...,  1.5544,  1.5544,  1.5544],
          [ 1.6921,  1.6921,  1.6921,  ...,  1.5544,  1.5544,  1.5544]],

         [[ 0.2954,  0.2954,  0.2954,  ...,  1.7977,  1.7977,  1.7977],
          [ 0.2954,  0.2954,  0.2954,  ...,  1.7977,  1.7977,  1.7977],
          [ 0.2954,  0.2954,  0.2954,  ...,  1.7977,  1.7977,  1.7977],
          ...,
          [ 1.9733,  1.9733,  1.9733,  ...,  1.8172,  1.8172,  1.8172],
          [ 1.9733,  1.9733,  1.9733,  ...,  1.8172,  1.8172,  1.8172],
          [ 1.9733,  1.9733,  1.9733,  ...,  1.8172,  1.8172,  1.8172]]],


        [[[-1.3241, -1.3241, -1.3241,  ..., -0.6263, -0.6263, -0.6263],
          [-1.3241, -1.3241, -1.3241,  ..., -0.6263, -0.6263, -0.6263],
          [-1.3241, -1.3241, -1.3241,  ..., -0.6263, -0.6263, -0.6263],
          ...,
          [-0.1610, -0.1610, -0.1610,  ..., -1.0721, -1.0721, -1.0721],
          [-0.1610, -0.1610, -0.1610,  ..., -1.0721, -1.0721, -1.0721],
          [-0.1610, -0.1610, -0.1610,  ..., -1.0721, -1.0721, -1.0721]],

         [[-1.2186, -1.2186, -1.2186,  ..., -0.2942, -0.2942, -0.2942],
          [-1.2186, -1.2186, -1.2186,  ..., -0.2942, -0.2942, -0.2942],
          [-1.2186, -1.2186, -1.2186,  ..., -0.2942, -0.2942, -0.2942],
          ...,
          [ 0.0794,  0.0794,  0.0794,  ..., -1.0612, -1.0612, -1.0612],
          [ 0.0794,  0.0794,  0.0794,  ..., -1.0612, -1.0612, -1.0612],
          [ 0.0794,  0.0794,  0.0794,  ..., -1.0612, -1.0612, -1.0612]],

         [[-1.0508, -1.0508, -1.0508,  ..., -0.5630, -0.5630, -0.5630],
          [-1.0508, -1.0508, -1.0508,  ..., -0.5630, -0.5630, -0.5630],
          [-1.0508, -1.0508, -1.0508,  ..., -0.5630, -0.5630, -0.5630],
          ...,
          [ 0.0223,  0.0223,  0.0223,  ..., -0.9142, -0.9142, -0.9142],
          [ 0.0223,  0.0223,  0.0223,  ..., -0.9142, -0.9142, -0.9142],
          [ 0.0223,  0.0223,  0.0223,  ..., -0.9142, -0.9142, -0.9142]]],


        ...,


        [[[ 2.0101,  2.0101,  2.0101,  ...,  1.8744,  1.8744,  1.8744],
          [ 2.0101,  2.0101,  2.0101,  ...,  1.8744,  1.8744,  1.8744],
          [ 2.0101,  2.0101,  2.0101,  ...,  1.8744,  1.8744,  1.8744],
          ...,
          [ 2.0295,  2.0295,  2.0295,  ...,  0.4011,  0.4011,  0.4011],
          [ 2.0295,  2.0295,  2.0295,  ...,  0.4011,  0.4011,  0.4011],
          [ 2.0295,  2.0295,  2.0295,  ...,  0.4011,  0.4011,  0.4011]],

         [[ 1.9281,  1.9281,  1.9281,  ...,  1.8298,  1.8298,  1.8298],
          [ 1.9281,  1.9281,  1.9281,  ...,  1.8298,  1.8298,  1.8298],
          [ 1.9281,  1.9281,  1.9281,  ...,  1.8298,  1.8298,  1.8298],
          ...,
          [ 1.9871,  1.9871,  1.9871,  ...,  0.3351,  0.3351,  0.3351],
          [ 1.9871,  1.9871,  1.9871,  ...,  0.3351,  0.3351,  0.3351],
          [ 1.9871,  1.9871,  1.9871,  ...,  0.3351,  0.3351,  0.3351]],

         [[ 1.8172,  1.8172,  1.8172,  ...,  1.7002,  1.7002,  1.7002],
          [ 1.8172,  1.8172,  1.8172,  ...,  1.7002,  1.7002,  1.7002],
          [ 1.8172,  1.8172,  1.8172,  ...,  1.7002,  1.7002,  1.7002],
          ...,
          [ 1.8563,  1.8563,  1.8563,  ...,  0.1784,  0.1784,  0.1784],
          [ 1.8563,  1.8563,  1.8563,  ...,  0.1784,  0.1784,  0.1784],
          [ 1.8563,  1.8563,  1.8563,  ...,  0.1784,  0.1784,  0.1784]]],


        [[[ 1.4673,  1.4673,  1.4673,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.4673,  1.4673,  1.4673,  ...,  0.1104,  0.1104,  0.1104],
          [ 1.4673,  1.4673,  1.4673,  ...,  0.1104,  0.1104,  0.1104],
          ...,
          [-0.5681, -0.5681, -0.5681,  ..., -1.2078, -1.2078, -1.2078],
          [-0.5681, -0.5681, -0.5681,  ..., -1.2078, -1.2078, -1.2078],
          [-0.5681, -0.5681, -0.5681,  ..., -1.2078, -1.2078, -1.2078]],

         [[ 1.8101,  1.8101,  1.8101,  ...,  0.4334,  0.4334,  0.4334],
          [ 1.8101,  1.8101,  1.8101,  ...,  0.4334,  0.4334,  0.4334],
          [ 1.8101,  1.8101,  1.8101,  ...,  0.4334,  0.4334,  0.4334],
          ...,
          [-0.5106, -0.5106, -0.5106,  ..., -1.5922, -1.5922, -1.5922],
          [-0.5106, -0.5106, -0.5106,  ..., -1.5922, -1.5922, -1.5922],
          [-0.5106, -0.5106, -0.5106,  ..., -1.5922, -1.5922, -1.5922]],

         [[ 2.0319,  2.0319,  2.0319,  ...,  0.0223,  0.0223,  0.0223],
          [ 2.0319,  2.0319,  2.0319,  ...,  0.0223,  0.0223,  0.0223],
          [ 2.0319,  2.0319,  2.0319,  ...,  0.0223,  0.0223,  0.0223],
          ...,
          [-0.3679, -0.3679, -0.3679,  ..., -1.4605, -1.4605, -1.4605],
          [-0.3679, -0.3679, -0.3679,  ..., -1.4605, -1.4605, -1.4605],
          [-0.3679, -0.3679, -0.3679,  ..., -1.4605, -1.4605, -1.4605]]],


        [[[-0.8007, -0.8007, -0.8007,  ..., -0.8395, -0.8395, -0.8395],
          [-0.8007, -0.8007, -0.8007,  ..., -0.8395, -0.8395, -0.8395],
          [-0.8007, -0.8007, -0.8007,  ..., -0.8395, -0.8395, -0.8395],
          ...,
          [-0.0253, -0.0253, -0.0253,  ...,  0.5756,  0.5756,  0.5756],
          [-0.0253, -0.0253, -0.0253,  ...,  0.5756,  0.5756,  0.5756],
          [-0.0253, -0.0253, -0.0253,  ...,  0.5756,  0.5756,  0.5756]],

         [[ 0.1384,  0.1384,  0.1384,  ...,  0.1778,  0.1778,  0.1778],
          [ 0.1384,  0.1384,  0.1384,  ...,  0.1778,  0.1778,  0.1778],
          [ 0.1384,  0.1384,  0.1384,  ...,  0.1778,  0.1778,  0.1778],
          ...,
          [ 0.3548,  0.3548,  0.3548,  ...,  0.6891,  0.6891,  0.6891],
          [ 0.3548,  0.3548,  0.3548,  ...,  0.6891,  0.6891,  0.6891],
          [ 0.3548,  0.3548,  0.3548,  ...,  0.6891,  0.6891,  0.6891]],

         [[ 1.1344,  1.1344,  1.1344,  ...,  1.1734,  1.1734,  1.1734],
          [ 1.1344,  1.1344,  1.1344,  ...,  1.1734,  1.1734,  1.1734],
          [ 1.1344,  1.1344,  1.1344,  ...,  1.1734,  1.1734,  1.1734],
          ...,
          [ 0.8612,  0.8612,  0.8612,  ...,  1.2319,  1.2319,  1.2319],
          [ 0.8612,  0.8612,  0.8612,  ...,  1.2319,  1.2319,  1.2319],
          [ 0.8612,  0.8612,  0.8612,  ...,  1.2319,  1.2319,  1.2319]]]])
[2025-02-24 23:31:43,461] [INFO] [CIFAR10.py:178:main] labels: 
tensor([9, 6, 6, 2, 8, 4, 8, 4, 0, 4, 1, 9, 5, 1, 4, 7, 4, 1, 8, 4, 2, 9, 3, 1,
        8, 0, 3, 8, 5, 8, 0, 6, 0, 0, 3, 9, 1, 7, 1, 6, 5, 5, 3, 4, 9, 4, 9, 4,
        3, 7, 5, 5, 1, 3, 3, 8, 4, 6, 8, 2, 9, 4, 3, 0]) 
labels.shapetensor([9, 6, 6, 2, 8, 4, 8, 4, 0, 4, 1, 9, 5, 1, 4, 7, 4, 1, 8, 4, 2, 9, 3, 1,
        8, 0, 3, 8, 5, 8, 0, 6, 0, 0, 3, 9, 1, 7, 1, 6, 5, 5, 3, 4, 9, 4, 9, 4,
        3, 7, 5, 5, 1, 3, 3, 8, 4, 6, 8, 2, 9, 4, 3, 0])
[2025-02-24 23:32:30,226] [INFO] [CIFAR10.py:177:main] images: 
tensor([[[[ 2.5141,  2.5141,  2.5141,  ...,  1.4479,  1.4479,  1.4479],
          [ 2.5141,  2.5141,  2.5141,  ...,  1.4479,  1.4479,  1.4479],
          [ 2.5141,  2.5141,  2.5141,  ...,  1.4479,  1.4479,  1.4479],
          ...,
          [-0.3355, -0.3355, -0.3355,  ..., -0.2192, -0.2192, -0.2192],
          [-0.3355, -0.3355, -0.3355,  ..., -0.2192, -0.2192, -0.2192],
          [-0.3355, -0.3355, -0.3355,  ..., -0.2192, -0.2192, -0.2192]],

         [[ 2.5968,  2.5968,  2.5968,  ...,  1.6331,  1.6331,  1.6331],
          [ 2.5968,  2.5968,  2.5968,  ...,  1.6331,  1.6331,  1.6331],
          [ 2.5968,  2.5968,  2.5968,  ...,  1.6331,  1.6331,  1.6331],
          ...,
          [-0.1959, -0.1959, -0.1959,  ..., -0.0779, -0.0779, -0.0779],
          [-0.1959, -0.1959, -0.1959,  ..., -0.0779, -0.0779, -0.0779],
          [-0.1959, -0.1959, -0.1959,  ..., -0.0779, -0.0779, -0.0779]],

         [[ 2.7537,  2.7537,  2.7537,  ...,  1.7002,  1.7002,  1.7002],
          [ 2.7537,  2.7537,  2.7537,  ...,  1.7002,  1.7002,  1.7002],
          [ 2.7537,  2.7537,  2.7537,  ...,  1.7002,  1.7002,  1.7002],
          ...,
          [-0.1143, -0.1143, -0.1143,  ..., -0.0948, -0.0948, -0.0948],
          [-0.1143, -0.1143, -0.1143,  ..., -0.0948, -0.0948, -0.0948],
          [-0.1143, -0.1143, -0.1143,  ..., -0.0948, -0.0948, -0.0948]]],


        [[[ 0.0910,  0.0910,  0.0910,  ..., -0.0641, -0.0641, -0.0641],
          [ 0.0910,  0.0910,  0.0910,  ..., -0.0641, -0.0641, -0.0641],
          [ 0.0910,  0.0910,  0.0910,  ..., -0.0641, -0.0641, -0.0641],
          ...,
          [-2.2740, -2.2740, -2.2740,  ...,  2.1652,  2.1652,  2.1652],
          [-2.2740, -2.2740, -2.2740,  ...,  2.1652,  2.1652,  2.1652],
          [-2.2740, -2.2740, -2.2740,  ...,  2.1652,  2.1652,  2.1652]],

         [[ 1.4758,  1.4758,  1.4758,  ...,  1.3381,  1.3381,  1.3381],
          [ 1.4758,  1.4758,  1.4758,  ...,  1.3381,  1.3381,  1.3381],
          [ 1.4758,  1.4758,  1.4758,  ...,  1.3381,  1.3381,  1.3381],
          ...,
          [-2.2806, -2.2806, -2.2806,  ...,  1.6921,  1.6921,  1.6921],
          [-2.2806, -2.2806, -2.2806,  ...,  1.6921,  1.6921,  1.6921],
          [-2.2806, -2.2806, -2.2806,  ...,  1.6921,  1.6921,  1.6921]],

         [[ 2.2660,  2.2660,  2.2660,  ...,  2.2855,  2.2855,  2.2855],
          [ 2.2660,  2.2660,  2.2660,  ...,  2.2855,  2.2855,  2.2855],
          [ 2.2660,  2.2660,  2.2660,  ...,  2.2855,  2.2855,  2.2855],
          ...,
          [-1.9678, -1.9678, -1.9678,  ...,  1.3490,  1.3490,  1.3490],
          [-1.9678, -1.9678, -1.9678,  ...,  1.3490,  1.3490,  1.3490],
          [-1.9678, -1.9678, -1.9678,  ...,  1.3490,  1.3490,  1.3490]]],


        [[[ 1.0990,  1.0990,  1.0990,  ...,  1.7193,  1.7193,  1.7193],
          [ 1.0990,  1.0990,  1.0990,  ...,  1.7193,  1.7193,  1.7193],
          [ 1.0990,  1.0990,  1.0990,  ...,  1.7193,  1.7193,  1.7193],
          ...,
          [ 1.6805,  1.6805,  1.6805,  ...,  2.1652,  2.1652,  2.1652],
          [ 1.6805,  1.6805,  1.6805,  ...,  2.1652,  2.1652,  2.1652],
          [ 1.6805,  1.6805,  1.6805,  ...,  2.1652,  2.1652,  2.1652]],

         [[ 0.2564,  0.2564,  0.2564,  ...,  0.7874,  0.7874,  0.7874],
          [ 0.2564,  0.2564,  0.2564,  ...,  0.7874,  0.7874,  0.7874],
          [ 0.2564,  0.2564,  0.2564,  ...,  0.7874,  0.7874,  0.7874],
          ...,
          [ 1.1414,  1.1414,  1.1414,  ...,  1.9085,  1.9085,  1.9085],
          [ 1.1414,  1.1414,  1.1414,  ...,  1.9085,  1.9085,  1.9085],
          [ 1.1414,  1.1414,  1.1414,  ...,  1.9085,  1.9085,  1.9085]],

         [[ 0.0808,  0.0808,  0.0808,  ...,  0.4710,  0.4710,  0.4710],
          [ 0.0808,  0.0808,  0.0808,  ...,  0.4710,  0.4710,  0.4710],
          [ 0.0808,  0.0808,  0.0808,  ...,  0.4710,  0.4710,  0.4710],
          ...,
          [ 1.0563,  1.0563,  1.0563,  ...,  1.8367,  1.8367,  1.8367],
          [ 1.0563,  1.0563,  1.0563,  ...,  1.8367,  1.8367,  1.8367],
          [ 1.0563,  1.0563,  1.0563,  ...,  1.8367,  1.8367,  1.8367]]],


        ...,


        [[[ 2.5141,  2.5141,  2.5141,  ...,  2.5141,  2.5141,  2.5141],
          [ 2.5141,  2.5141,  2.5141,  ...,  2.5141,  2.5141,  2.5141],
          [ 2.5141,  2.5141,  2.5141,  ...,  2.5141,  2.5141,  2.5141],
          ...,
          [ 0.6144,  0.6144,  0.6144,  ...,  0.6531,  0.6531,  0.6531],
          [ 0.6144,  0.6144,  0.6144,  ...,  0.6531,  0.6531,  0.6531],
          [ 0.6144,  0.6144,  0.6144,  ...,  0.6531,  0.6531,  0.6531]],

         [[ 2.5968,  2.5968,  2.5968,  ...,  2.5968,  2.5968,  2.5968],
          [ 2.5968,  2.5968,  2.5968,  ...,  2.5968,  2.5968,  2.5968],
          [ 2.5968,  2.5968,  2.5968,  ...,  2.5968,  2.5968,  2.5968],
          ...,
          [ 0.5711,  0.5711,  0.5711,  ...,  0.9054,  0.9054,  0.9054],
          [ 0.5711,  0.5711,  0.5711,  ...,  0.9054,  0.9054,  0.9054],
          [ 0.5711,  0.5711,  0.5711,  ...,  0.9054,  0.9054,  0.9054]],

         [[ 2.7537,  2.7537,  2.7537,  ...,  2.7537,  2.7537,  2.7537],
          [ 2.7537,  2.7537,  2.7537,  ...,  2.7537,  2.7537,  2.7537],
          [ 2.7537,  2.7537,  2.7537,  ...,  2.7537,  2.7537,  2.7537],
          ...,
          [-0.0558, -0.0558, -0.0558,  ...,  0.0613,  0.0613,  0.0613],
          [-0.0558, -0.0558, -0.0558,  ...,  0.0613,  0.0613,  0.0613],
          [-0.0558, -0.0558, -0.0558,  ...,  0.0613,  0.0613,  0.0613]]],


        [[[-1.0915, -1.0915, -1.0915,  ..., -1.7506, -1.7506, -1.7506],
          [-1.0915, -1.0915, -1.0915,  ..., -1.7506, -1.7506, -1.7506],
          [-1.0915, -1.0915, -1.0915,  ..., -1.7506, -1.7506, -1.7506],
          ...,
          [-0.3355, -0.3355, -0.3355,  ..., -1.4017, -1.4017, -1.4017],
          [-0.3355, -0.3355, -0.3355,  ..., -1.4017, -1.4017, -1.4017],
          [-0.3355, -0.3355, -0.3355,  ..., -1.4017, -1.4017, -1.4017]],

         [[-1.6512, -1.6512, -1.6512,  ..., -2.1036, -2.1036, -2.1036],
          [-1.6512, -1.6512, -1.6512,  ..., -2.1036, -2.1036, -2.1036],
          [-1.6512, -1.6512, -1.6512,  ..., -2.1036, -2.1036, -2.1036],
          ...,
          [-0.3729, -0.3729, -0.3729,  ..., -1.4152, -1.4152, -1.4152],
          [-0.3729, -0.3729, -0.3729,  ..., -1.4152, -1.4152, -1.4152],
          [-0.3729, -0.3729, -0.3729,  ..., -1.4152, -1.4152, -1.4152]],

         [[-2.1043, -2.1043, -2.1043,  ..., -2.1824, -2.1824, -2.1824],
          [-2.1043, -2.1043, -2.1043,  ..., -2.1824, -2.1824, -2.1824],
          [-2.1043, -2.1043, -2.1043,  ..., -2.1824, -2.1824, -2.1824],
          ...,
          [-0.4264, -0.4264, -0.4264,  ..., -1.8312, -1.8312, -1.8312],
          [-0.4264, -0.4264, -0.4264,  ..., -1.8312, -1.8312, -1.8312],
          [-0.4264, -0.4264, -0.4264,  ..., -1.8312, -1.8312, -1.8312]]],


        [[[-2.4097, -2.4097, -2.4097,  ..., -0.5100, -0.5100, -0.5100],
          [-2.4097, -2.4097, -2.4097,  ..., -0.5100, -0.5100, -0.5100],
          [-2.4097, -2.4097, -2.4097,  ..., -0.5100, -0.5100, -0.5100],
          ...,
          [-2.1189, -2.1189, -2.1189,  ..., -0.0060, -0.0060, -0.0060],
          [-2.1189, -2.1189, -2.1189,  ..., -0.0060, -0.0060, -0.0060],
          [-2.1189, -2.1189, -2.1189,  ..., -0.0060, -0.0060, -0.0060]],

         [[-2.3986, -2.3986, -2.3986,  ..., -0.3139, -0.3139, -0.3139],
          [-2.3986, -2.3986, -2.3986,  ..., -0.3139, -0.3139, -0.3139],
          [-2.3986, -2.3986, -2.3986,  ..., -0.3139, -0.3139, -0.3139],
          ...,
          [-2.0446, -2.0446, -2.0446,  ...,  0.3941,  0.3941,  0.3941],
          [-2.0446, -2.0446, -2.0446,  ...,  0.3941,  0.3941,  0.3941],
          [-2.0446, -2.0446, -2.0446,  ...,  0.3941,  0.3941,  0.3941]],

         [[-2.2019, -2.2019, -2.2019,  ..., -1.3434, -1.3434, -1.3434],
          [-2.2019, -2.2019, -2.2019,  ..., -1.3434, -1.3434, -1.3434],
          [-2.2019, -2.2019, -2.2019,  ..., -1.3434, -1.3434, -1.3434],
          ...,
          [-1.9873, -1.9873, -1.9873,  ..., -0.9337, -0.9337, -0.9337],
          [-1.9873, -1.9873, -1.9873,  ..., -0.9337, -0.9337, -0.9337],
          [-1.9873, -1.9873, -1.9873,  ..., -0.9337, -0.9337, -0.9337]]]]) 
images.shapetorch.Size([64, 3, 227, 227])
[2025-02-24 23:32:30,227] [INFO] [CIFAR10.py:178:main] labels: 
tensor([8, 7, 3, 9, 2, 2, 7, 8, 6, 0, 1, 0, 2, 2, 0, 5, 4, 2, 3, 4, 6, 4, 4, 3,
        2, 0, 2, 2, 7, 3, 8, 5, 6, 4, 6, 5, 5, 4, 2, 5, 4, 8, 7, 2, 9, 6, 2, 8,
        8, 6, 0, 4, 8, 8, 3, 9, 5, 8, 4, 1, 2, 7, 5, 2]) 
labels.shapetorch.Size([64])
